Django Function Based Views

Function based views are important for handling HTTP requests and generating HTTP responses 

1. Creating Function Based Views
	Each function will take a request object as its first parameter and return an HTTP response

	from Django.http import HttpResponse
	
	def my_view(request):
		return HttpResponse("Hello world!")


2. Mapping URLS to Function-Based Views
	URLS are mapped to Function Based Views using Django's URLconf. You will specifiy a URL 	pattern and associate them with corresponding view functions.

	from Django.urls import path
	from . import views

	urlpatterns = [
		path('hello/', views.my_view, name="hello-view")
	]


3. Handling HTTP Methods
	Function Based Views can handle different HTTP methods (GET, POST, etc) using conditional 	logic based on request.method

	def my_view(request):
		if request.method == "GET":
			return HttpResponse(This is a GET request")
		elif request.method == "POST":
			return HttpResponse("This is a POST request"


4. Returning HTTP Responses
	Function Based Views return instances of HttpResponse or its subclasses JsonResponse
	HttpResponseRedirect to send data back to the client


5. Accessing Request Data
	Request data, such as form inputs or query parameters, is accessed through the request 	object (request.GET, request.POST, request.FILES, etc.).

	def my_form_view(request):
    		if request.method == 'POST':
        	form_data = request.POST
        	# Process form data
    	else:
        	# Handle GET request
        	return HttpResponse("This is a GET request.")
		
