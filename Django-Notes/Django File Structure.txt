Django Notes

Apps: 
	Represent a small part that makes up a website they consist of 
	Datebase (Models), Views, URLS

	Ex: Facebook.com has App for Users(Photo Pages, Friends) Another app for 
	Fee(Likes Comments)

	You would let django know about the apps by registering them in the INSTALLED_APPS folder
	

Views:
	Are functions used to process user request for a user when they visit a certain URL
	or a endpoint from your website.

	mywebsite.com/profile -> profileView() -> weclome

url Routing:
	To handle URL routing in django we create a URL pattern in a list, and attach different
	paths to those views

Models:
	Are class based representations of our database tables and are at the core of how we 
	design our database

	With models we create a class that represents a table and the attributes in the class
	represent each column in the database

Django ORM:
	get(), all(), filter(), are how we retrive data from the database using Django ORM

Admin Panel:
	Django gives a admin panal to view or create data in a databse

CRUD:
	Create, Read, Update, Delete, 

5 Most Common Commands

Creates boiler plate django files
	django-admin startproject <project-name>

Creates app folder and files
	python manage.py startapp <app-name>

Preps our database for migrations
	python manage.py makemigrations

Executes our migrations & updates the database
	python manage.py migrate

Creates a user with admin level permissions
	python manage.py createsuperuser

Signals:
	Know how to create senders and recievers for events and fire off actiosn when they occur

	User Registers -> Send() -> Email User

Django REST Framework:
	

Serializer:
	Is used to define a class that will take a model and convert it to JSON compatable data


COMMANDS

python manage.py migrate --run-syncdb 

Also don't forget to specity app path. For example:

	python manage.py makemigrations folderwherechangeshappen
python manage.py migrate folderwherechangeshappen