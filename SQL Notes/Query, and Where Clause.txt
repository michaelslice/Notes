SQL Notes

Relational Databases: Represents a collection of related (two dimensional tables)

1. Select Queries

Query: Is a statement which declares what data we are looking for, where to find it in a database

Select Query for a specific column:
	SELECT column, another_column,...
	FROM myTables;

The result of the above query will be a two-dimensional set of rows and columns, basically a copy of the table but only with the columns we requested

Select Query for all columns:
	SELECT * 
	FROM myTables;

2. Query with Constraints

WHERE: Is a keyword used to filter data for certain results, the clause is applied to each row of data by checking specific column values

Select Query with Constraints:
	SELECT column, another_coloumn, …
	FROM meetable
	WHERE condition
	AND/OR another_condition
	AND/OR …;

Operator: =, !=, <, <=. >, >=, Standard numerical operators, Example: col_name !=4

Operator: BETWEEN...AND..., Condition: Number is within range of two values (inclusive)
Example: col_name BETWEEN 1.5 and 10.5

Operator: NOT BETWEEN...AND, Condition: Number is not withing range of two values(inclusive)
Example: col_name NOT BETWEEN 1 AND 10

Operator: IN (…), Condition: Number exists in a list, Example: col_name IN (2, 4, 6)
Operator: NOT IN(…), Condition: Number does not exist in a list, Example: col_name NOT IN (1,3,5)



3. Queries with Contraints

When writing WHERE clauses with columns containing text data, SQL supports multiple operators for this

Operator: = , Condtion: Case sensitive exact string comparison(notice the single equals)
Operator: != or <>, Condition: Case sensitive exact string inequality comparison
Operator: LIKE, Condition: Case insensitive exact string comparison
Operator: NOT LIKE, Condition: Case insensitive exact string inequality comparison
Operator: %, Condition: Used anywhere in as tring to match a sequence of zero or more characters (only with LIKE or NOT LIKE)
Operator: -, Condition:Used anywhere in a string to match a single character(only with LIKE or NOT LIKE)
Operator: IN(…), Condition: String exist in a list
Operator: NOT IN(…), Condition: String does not exist in a list