mounting(adding nodes to the DOM), when we create and add the component
unmounting(removing nodes from the DOM)

rendering: Creating a user interface based on the applications current state and props
re-rendering: Occurs when there is a change in state or props

useEffect === use some side code

useEffect() = React hook that React DO SOME CODE WHEN (pick one)
    This component re-renders
    This component mounts
    The state of a value changes

useEffect(function, [dependencies])

1. useEffect(() => {})              Runs after every re-render
2. useEffect(() => {}, [])          Runs only on mount
3. useEffect(() => {}, [value])     Runs on mount + when values changes

USES

1. Event Listeners
2. DOM manipulation
3. Subscriptions (real-time-updates)
4. Fetching Data from an API
5. Clean up when a component unmounts

// This tells react when the component mounts
// and when the value changes, execute the function code
useEffect(() => {
    document.title = `count: ${count}`;
}, [count])


// Cleanup Code
useEffect(() => {
    window.addEventListener("resize", handelResize);
    console.log("EVENT LISTNER ADDED);

    return () => {
        widnow.removeEventListener("resize", handleResize);
        console.log("EVENT LISTENER REMOVED)
    }
}, []) // Run only when componenet is mounted
